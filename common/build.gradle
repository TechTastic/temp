architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/valkyrien_computers.accesswidener")
}

dependencies {
    annotationProcessor(implementation("com.github.LlamaLad7:MixinExtras:0.1.1"))

    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"

    // VS2
    modApi("org.valkyrienskies:valkyrienskies-118-common:${rootProject.vs2_version}")
    implementation("org.valkyrienskies.core:api:${vs_core_version}") { transitive = false }
    implementation("org.valkyrienskies.core:api-game:${vs_core_version}") { transitive = false }
    implementation("org.valkyrienskies.core:impl:${vs_core_version}") { transitive = false }

    //Flywheel
    modImplementation("com.jozufozu.flywheel:flywheel-fabric-${minecraft_version}:${flywheel_version}")

    // JOML
    compileOnly("org.joml:joml:1.10.4")
    compileOnly("org.joml:joml-primitives:1.10.0")

    // Kotlin
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.21"
    api "org.jetbrains.kotlin:kotlin-reflect:1.7.21"

    // CC Restitched
    modCompileOnly("curse.maven:cc-restitched-462672:3622561")
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
